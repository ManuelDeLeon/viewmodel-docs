template(name='arrays')
  a.bookmark(id='arraysBk')
  .section
    h1 Arrays
    p
      | Arrays are automatically converted to
      a(href="http://reactivearray.meteor.com", target="_blank") reactive arrays
      | . This means they become reactive sources and thus you'll be notified when items are added or removed.

    pre.
      vm = new ViewModel
        names: ['Tom', 'Dick', 'Harry']
  #arrays
    .section
      +arrayList
    .section
      +arrayListCode
    .section
      +arrayNumbers
    .section
      +arrayNumbersCode

template(name="arrayList")
    h1 List Example
    ul.unstyled
      each names
        +arrayName
    br
    | Name:
    input(type="text", data-bind="value: newName")
    a.btn.btn-primary(data-bind="click: addName") Add name to list

template(name="arrayName")
  li
    a.btn.btn-danger.btn-mini(title="Remove this name", data-bind="click: remove") x
    span(data-bind="text: name")

template(name="arrayNumbers")
  h1 Numbers Example
  p(data-bind="text: numbers")
  p
    | Sum:
    span(data-bind="text: sum")
  | New:
  input(type="text", data-bind="value: newNumber")
  a.btn.btn-primary(data-bind="click: addNumber") Add number to list


template(name="arrayListCode")
  h2 Code
  ul.nav.nav-pills
    li
      a(href="#arrayListCode-jade", data-toggle="tab") Jade
    li.active
      a(href="#arrayListCode-html", data-toggle="tab") Html
  div.tab-content
    div#arrayListCode-jade.tab-pane.fade
      pre.
        template(name="arrayList")
          h1 List Example
          ul.unstyled
            &#101;ach <b>names</b>
              &#43;arrayName
          br
          | Name:
          input(type="text", data-bind="value: newName")
          a.btn.btn-primary(data-bind="click: addName") Add name to list

        template(name="arrayName")
          li
            a.btn.btn-danger.btn-mini(title="Remove this name", data-bind="click: remove") x
            span(data-bind="text: name")
    div#arrayListCode-html.tab-pane.fade.active.in
      pre.
        &lt;template name=&quot;arrayList&quot;&gt;
          &lt;h1&gt;List Example&lt;/h1&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
            &#123;{#each names }}
              &#123;{&gt; arrayName }}
            &#123;{/each }}
          &lt;/ul&gt;
          &lt;br/&gt;
          Name: &lt;input type=&quot;text&quot; data-bind=&quot;value: newName&quot;/&gt;&lt;a data-bind=&quot;click: addName&quot; class=&quot;btn btn-primary&quot;&gt;Add name to list&lt;/a&gt;
        &lt;/template&gt;

        &lt;template name=&quot;arrayName&quot;&gt;
          &lt;li&gt;
            &lt;a title=&quot;Remove this name&quot; data-bind=&quot;click: remove&quot; class=&quot;btn btn-danger btn-mini&quot;&gt;x&lt;/a&gt;&lt;span data-bind=&quot;text: name&quot;&gt;&lt;/span&gt;
          &lt;/li&gt;
        &lt;/template&gt;
  ul.nav.nav-pills
    li
      a(href="#arrayListCode-coffee", data-toggle="tab") Coffeescript
    li.active
      a(href="#arrayListCode-js", data-toggle="tab") Javascript
  div.tab-content
    div#arrayListCode-coffee.tab-pane.fade
      pre.
        Template.arrayList.viewmodel
          names: ['Tom', 'Dick', 'Harry']
          newName: ''
          addName: ->
            @names().push @newName()
            @newName ''
        , 'names'

        Template.arrayName.viewmodel (data) ->
          name: data
          remove: -> @parent().names().remove @name()
    div#arrayListCode-js.tab-pane.fade.active.in
      pre.
        Template.arrayList.viewmodel({
          names: ['Tom', 'Dick', 'Harry'],
          newName: '',
          addName: function() {
            this.names().push(this.newName());
            this.newName('');
          }
        }, 'names');

        Template.arrayName.viewmodel(function(data) {
          return {
            name: data,
            remove: function() {
              this.parent().names().remove(this.name());
            }
          };
        });

template(name="arrayNumbersCode")
  h2 Code
  ul.nav.nav-pills
    li
      a(href="#arrayNumbersCode-jade", data-toggle="tab") Jade
    li.active
      a(href="#arrayNumbersCode-html", data-toggle="tab") Html
  div.tab-content
    div#arrayNumbersCode-jade.tab-pane.fade
      pre.
        template(name="arrayNumbers")
          h1 Numbers Example
          p(data-bind="text: numbers")
          p
            | Sum:
            span(data-bind="text: sum")
          | New:
          input(type="text", data-bind="value: newNumber")
          a.btn.btn-primary(data-bind="click: addNumber") Add number to list
    div#arrayNumbersCode-html.tab-pane.fade.active.in
      pre.
        &lt;template name=&quot;arrayNumbers&quot;&gt;
          &lt;h1&gt;Numbers Example&lt;/h1&gt;
          &lt;p data-bind=&quot;text: numbers&quot;&gt;&lt;/p&gt;
          &lt;p&gt;Sum:&lt;span data-bind=&quot;text: sum&quot;&gt;&lt;/span&gt;&lt;/p&gt;
          New: &lt;input type=&quot;text&quot; data-bind=&quot;value: newNumber&quot;/&gt;&lt;a data-bind=&quot;click: addNumber&quot; class=&quot;btn btn-primary&quot;&gt;Add number to list&lt;/a&gt;
        &lt;/template&gt;
  ul.nav.nav-pills
    li
      a(href="#arrayNumbersCode-coffee", data-toggle="tab") Coffeescript
    li.active
      a(href="#arrayNumbersCode-js", data-toggle="tab") Javascript
  div.tab-content
    div#arrayNumbersCode-coffee.tab-pane.fade
      pre.
        Template.arrayNumbers.viewmodel
          numberList: [2,3,1,9,3]
          numbers: -> @numberList().toString()
          sum: -> @numberList().reduce((t,s) -> t + s)
          newNumber: ''
          addNumber: ->
            @numberList().push parseInt(@newNumber())
            @newNumber ''
    div#arrayNumbersCode-js.tab-pane.fade.active.in
      pre.
        Template.arrayNumbers.viewmodel({
          numberList: [2, 3, 1, 9, 3],
          numbers: function() {
            return this.numberList().toString();
          },
          sum: function() {
            return this.numberList().reduce(function(t, s) {
              return t + s;
            });
          },
          newNumber: '',
          addNumber: function() {
            this.numberList().push(parseInt(this.newNumber()));
            this.newNumber('');
          }
        });
